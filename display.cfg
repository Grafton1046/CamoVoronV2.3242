#####################################################################
# 	Displays
#####################################################################

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[output_pin BEEP]
## beeper
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 5000

[neopixel LCD]
##	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 3 = display, Index 2 and 1 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=LCD RED=0 GREEN=.5 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=LCD RED=0 GREEN=.5 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=LCD RED=0 GREEN=1 BLUE=0 INDEX=3 
        SET_LED LED=sb_leds RED=0 GREEN=0.25 BLUE=0 WHITE=0 INDEX=1 TRANSMIT=0
		SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=2 TRANSMIT=0
		SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=3
        SET_PIN PIN=chamber_lights VALUE=0.5
        M117 Ready

[gcode_macro M300]
gcode:  
  {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
  {% set P = params.P|default(100)|int %} ; P sets the tone duration

  SET_PIN PIN=BEEP VALUE={S} CYCLE_TIME={ 1.0/S if S >0 else 1} ;Play tone
  G4 P{P} ;tone duration
  SET_PIN PIN=BEEP VALUE=0
#--------------------------------------------------------------------

[menu __main __octoprint]
type: disabled

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S100
    M104 S200

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S200

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S100

[menu __main __temp __preheat_PETG]
type: list
name: Preheat PETG

[menu __main __temp __preheat_PETG __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S80
    M104 S200

[menu __main __temp __preheat_PETG __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S200

[menu __main __temp __preheat_PETG __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S80

[menu __main __poweroff]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Reboot Pi
gcode:
    {action_respond_info('action:reboot')}

[menu __main ___poweroff]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shutdown Pi
gcode:
    {action_respond_info('action:poweroff')}

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>