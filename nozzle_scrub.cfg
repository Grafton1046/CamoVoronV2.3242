

[gcode_macro clean_nozzle]
# Adjust this so that your nozzle scrubs within the brush. Be careful not to go too low!
variable_brush_top:            3.5 
# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. 
variable_clearance_z:           5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:        6000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        9000	         ; Nozzle wipe speed in mm/min.
# These parameters define the size of the brush. Update as necessary. A visual reference is provided below.
#                  ←   brush_width   →                            
#                  |                 |                      
#  brush_start (x) |                 |       
#                  |_________________|
#
#                     PRINTER FRONT
variable_brush_start:     266
variable_brush_width:     33	

gcode:
   {% if "xyz" in printer.toolhead.homed_axes %} ;check if the axes are homed.
      SAVE_GCODE_STATE NAME=clean_nozzle ;Save the gcode state in this macro instance.
      G90 ;Set to absolute positioning.
      M117 Cleaning
      {% set Maxy = printer.configfile.config["stepper_y"]["position_max"]|float %} ;Grab max position of Y-axis
      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z} ;
      G1 X{brush_start} F{prep_spd_xy}
      ## Check if user chose to use rear location.
      G1 Y{Maxy}
      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
         G91 
         G1 Y-0.5
         G90
      {% endfor %}
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      RESTORE_GCODE_STATE NAME=clean_nozzle ;Restore the gcode state to how it was before the macro.
   {% else %}
      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!
   {% endif %}