[neopixel sb_leds]
pin: PB0
Chain_count:3
color_order: GRBW
initial_GREEN: 0.0
initial_RED: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[gcode_macro _sb_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0}, #dim red
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0}, #blue
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0}, #pinkish purple
            'heating': {'r': 0.5, 'g': 0.18, 'b': 0.0, 'w': 0.0}, #orange
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0}, #teal
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0}, #purple
            'meshing': {'r': 0.2, 'g': 0.6, 'b': 0.2, 'w': 0.0}, #teal
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 0.75, 'g': 0.0, 'b': 0.0, 'w': 0.0}, #red
            'standby': {'r': 0.0, 'g': 0.25, 'b': 0.01, 'w': 0.1}, #dim green
        },
        'nozzle': { # Colors for nozzle states
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0}, #reddish yellow
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0}, #white
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0}, #dim red
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "sb_leds" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "1" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "sb_leds"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "2,3"
# A comma-separated list of indexes of LEDs in the nozzle
gcode:
    # This section is required.  Do Not Delete.


[gcode_macro _set_sb_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        CLEAR_TEMPERATURE_LED led=sb_leds index=3
        CLEAR_TEMPERATURE_LED led=sb_leds index=2
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_sb_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_sb_leds_by_name leds="logo" color="standby" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="off" transmit=1

[gcode_macro status_busy]
gcode:
    _set_sb_leds_by_name leds="logo" color="busy" transmit=0
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    {% set hotend = printer.extruder.target|int %}
    _set_sb_leds_by_name leds="logo" color="heating" transmit=1
    #_set_sb_leds_by_name leds="nozzle" color="heating" transmit=1
    SET_TEMPERATURE_LED SENSOR=extruder COOL_TEMP=50 HOT_TEMP={hotend} BRIGHTNESS=0.75 LED=sb_leds INDEX=3
    SET_TEMPERATURE_LED SENSOR=extruder COOL_TEMP=50 HOT_TEMP={hotend} BRIGHTNESS=0.75 LED=sb_leds INDEX=2

[gcode_macro status_soaking]
gcode:
    _set_sb_leds_by_name leds="logo" color="heating" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_sb_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_sb_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_sb_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_sb_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_sb_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on


[gcode_macro knob_status_red]
gcode:
        CLEAR_TEMPERATURE_LED led=LCD index=2
        CLEAR_TEMPERATURE_LED led=LCD index=1
		SET_LED LED=LCD RED=0.75 GREEN=0 BLUE=0 INDEX=1
		SET_LED LED=LCD RED=0.75 GREEN=0 BLUE=0 INDEX=2
		SET_LED LED=LCD RED=0 GREEN=0.6 BLUE=0 INDEX=3
		
[gcode_macro knob_status_blue]
gcode:
        CLEAR_TEMPERATURE_LED led=LCD index=2
        CLEAR_TEMPERATURE_LED led=LCD index=1
		SET_LED LED=LCD RED=0 GREEN=0 BLUE=0.75 INDEX=1
		SET_LED LED=LCD RED=0 GREEN=0 BLUE=0.75 INDEX=2
		SET_LED LED=LCD RED=0 GREEN=0.6 BLUE=0 INDEX=3
		
[gcode_macro knob_status_green]
gcode:
        CLEAR_TEMPERATURE_LED led=LCD index=2
        CLEAR_TEMPERATURE_LED led=LCD index=1
		SET_LED LED=LCD RED=0 GREEN=0.75 BLUE=0 INDEX=1
		SET_LED LED=LCD RED=0 GREEN=0.75 BLUE=0 INDEX=2
		SET_LED LED=LCD RED=0 GREEN=0.6 BLUE=0 INDEX=3

[gcode_macro knob_status_heating]
gcode:
        {% set bed = printer.heater_bed.target|int %}
		SET_TEMPERATURE_LED SENSOR=heater_bed COOL_TEMP=22 HOT_TEMP={bed} BRIGHTNESS=0.75 LED=LCD INDEX=1
        SET_TEMPERATURE_LED SENSOR=heater_bed COOL_TEMP=22 HOT_TEMP={bed} BRIGHTNESS=0.75 LED=LCD INDEX=2
		SET_LED LED=LCD RED=0 GREEN=0.6 BLUE=0 INDEX=3





## Neopixel Temperature Indicator
# Source: https://github.com/MapleLeafMakers/KlipperMacros/

# Usage:
# To begin monitoring a temperature:
# SET_TEMPERATURE_LED LED=<led_name> [INDEX=<index>] [SENSOR=heater_bed] [COOL_TEMP=22] [HOT_TEMP=100] [BRIGHTNESS=1.0]
# 
# To stop monitoring a temperature, and resume normal LED control
# CLEAR_TEMPERATURE_LED LED=<led_name> [INDEX=<index>]
#
# You can automate this by adding a delayed gcode macro to your printer.cfg, for example:
#
# [delayed_gcode set_temeperature_leds]
# initial_duration: 1
# gcode:
#     SET_TEMPERATURE_LED LED=bed_light SENSOR=heater_bed
#     SET_TEMPERATURE_LED LED=sb_leds INDEX=1 SENSOR=extruder
    

[gcode_macro SET_TEMPERATURE_LED]
description: Set one or more neopixels to track a temperature
gcode:
  {% set sensor = params.SENSOR|default('heater_bed') %}
  {% set cool_temp = params.COOL_TEMP|default(22.0)|float %}
  {% set hot_temp = params.HOT_TEMP|default(100)|float %}
  {% set brightness = params.BRIGHTNESS|default(0.75)|float %}
  {% set led = params.LED %}
  {% set index = params.INDEX %}
  SET_LED_TEMPLATE LED={led}{% if index is defined %} INDEX={index}{% endif %} TEMPLATE=temperature_color param_sensor="'{sensor}'" param_cool_temp={cool_temp} param_hot_temp={hot_temp} param_brightness={brightness}


[gcode_macro CLEAR_TEMPERATURE_LED]
description: Set one or more neopixels to stop tracking a temperature and return to normal operation
gcode:
  {% set led = params.LED %}
  {% set index = params.INDEX %}
  SET_LED_TEMPLATE LED={led}{% if index is defined %} INDEX={index}{% endif %} TEMPLATE=


[display_template temperature_color]
param_cool_temp: 22
param_hot_temp: 100
param_sensor: 'heater_bed'
param_brightness: 1.0

param_gradient: [
  (0.04,0.04,1.00,0.00),
  (0.04,0.04,1.00,0.00),
  (0.04,0.04,1.00,0.00),
  (0.04,0.04,1.00,0.00),
  (0.04,0.04,1.00,0.00),
  (0.05,0.04,1.00,0.00),
  (0.05,0.05,1.00,0.00),
  (0.06,0.06,1.00,0.00),
  (0.07,0.07,1.00,0.00),
  (0.08,0.08,1.00,0.00),
  (0.09,0.10,1.00,0.00),
  (0.11,0.12,1.00,0.00),
  (0.13,0.13,1.00,0.00),
  (0.15,0.15,1.00,0.00),
  (0.16,0.17,0.99,0.00),
  (0.18,0.19,0.99,0.00),
  (0.20,0.21,0.99,0.00),
  (0.23,0.23,0.99,0.00),
  (0.25,0.25,0.98,0.00),
  (0.27,0.27,0.98,0.00),
  (0.29,0.31,0.98,0.00),
  (0.31,0.42,0.96,0.00),
  (0.31,0.50,0.94,0.00),
  (0.31,0.57,0.92,0.00),
  (0.31,0.63,0.89,0.00),
  (0.31,0.69,0.86,0.00),
  (0.31,0.74,0.84,0.00),
  (0.30,0.78,0.80,0.00),
  (0.29,0.82,0.76,0.00),
  (0.27,0.86,0.72,0.00),
  (0.25,0.89,0.66,0.00),
  (0.23,0.93,0.58,0.00),
  (0.20,0.96,0.50,0.00),
  (0.16,0.98,0.41,0.00),
  (0.13,0.99,0.33,0.00),
  (0.09,1.00,0.25,0.00),
  (0.07,1.00,0.14,0.00),
  (0.08,1.00,0.20,0.00),
  (0.07,1.00,0.24,0.00),
  (0.08,1.00,0.25,0.00),
  (0.11,1.00,0.23,0.00),
  (0.10,1.00,0.18,0.00),
  (0.09,1.00,0.14,0.00),
  (0.18,1.00,0.22,0.00),
  (0.27,0.99,0.25,0.00),
  (0.36,0.98,0.28,0.00),
  (0.45,0.97,0.29,0.00),
  (0.53,0.96,0.29,0.00),
  (0.62,0.94,0.27,0.00),
  (0.71,0.92,0.23,0.00),
  (0.79,0.90,0.16,0.00),
  (0.86,0.88,0.10,0.00),
  (0.91,0.86,0.20,0.00),
  (0.95,0.84,0.25,0.00),
  (0.98,0.82,0.27,0.00),
  (0.98,0.82,0.27,0.00),
  (0.98,0.82,0.24,0.00),
  (0.99,0.82,0.16,0.00),
  (1.00,0.82,0.15,0.00),
  (1.00,0.82,0.13,0.00),
  (1.00,0.82,0.10,0.00),
  (1.00,0.83,0.06,0.00),
  (1.00,0.83,0.03,0.00),
  (1.00,0.82,0.09,0.00),
  (1.00,0.81,0.12,0.00),
  (1.00,0.80,0.14,0.00),
  (1.00,0.80,0.16,0.00),
  (1.00,0.78,0.17,0.00),
  (1.00,0.77,0.18,0.00),
  (1.00,0.76,0.18,0.00),
  (1.00,0.75,0.19,0.00),
  (1.00,0.74,0.19,0.00),
  (1.00,0.72,0.20,0.00),
  (1.00,0.71,0.20,0.00),
  (1.00,0.69,0.20,0.00),
  (1.00,0.68,0.20,0.00),
  (1.00,0.66,0.20,0.00),
  (1.00,0.64,0.20,0.00),
  (1.00,0.62,0.19,0.00),
  (1.00,0.60,0.18,0.00),
  (1.00,0.57,0.16,0.00),
  (1.00,0.54,0.15,0.00),
  (1.00,0.51,0.14,0.00),
  (1.00,0.47,0.13,0.00),
  (1.00,0.43,0.11,0.00),
  (1.00,0.39,0.10,0.00),
  (1.00,0.37,0.08,0.00),
  (1.00,0.36,0.06,0.00),
  (1.00,0.33,0.05,0.00),
  (1.00,0.31,0.04,0.00),
  (1.00,0.29,0.02,0.00),
  (1.00,0.27,0.02,0.00),
  (1.00,0.26,0.01,0.00),
  (1.00,0.24,0.01,0.00),
  (1.00,0.22,0.00,0.00),
  (1.00,0.20,0.00,0.00),
  (1.00,0.18,0.00,0.00),
  (1.00,0.16,0.00,0.00),
  (1.00,0.15,0.00,0.00),
  (1.00,0.13,0.00,0.00),
  (1.00,0.11,0.00,0.00),
  (1.00,0.09,0.00,0.00),
  (1.00,0.07,0.00,0.00),
  (1.00,0.05,0.00,0.00),
  (1.00,0.04,0.00,0.00),
  (1.00,0.02,0.00,0.00),
  (1.00,0.01,0.00,0.00),
  (1.00,0.00,0.00,0.00)]
text:
  {% set temp = printer[param_sensor].temperature %}
  {% set steps = param_gradient|length %}
  {% set idx = (((temp - param_cool_temp) / (param_hot_temp - param_cool_temp)) * steps) | int %}
  {% if idx < 0 %} 
    {% set idx = 0 %}
  {% elif idx > steps-1 %}
    {% set idx = steps-1 %}
  {% endif %}
  { param_gradient[idx][0] * param_brightness },{ param_gradient[idx][1] * param_brightness },{ param_gradient[idx][2] * param_brightness },{ param_gradient[idx][3] * param_brightness }

# SET_TEMPERATURE_LED SENSOR=heater_bed COOL_TEMP=22 HOT_TEMP=printer.heater_bed.target|int BRIGHTNESS=0.75 LED=LCD INDEX=1
# SET_TEMPERATURE_LED SENSOR=heater_bed COOL_TEMP=22 HOT_TEMP=105 BRIGHTNESS=0.75 LED=LCD INDEX=2

# SET_TEMPERATURE_LED SENSOR=extruder COOL_TEMP=50 HOT_TEMP=printer.heater_bed.target|int BRIGHTNESS=0.75 LED=sb_leds INDEX=3
# SET_TEMPERATURE_LED SENSOR=extruder COOL_TEMP=50 HOT_TEMP=250 BRIGHTNESS=0.75 LED=sb_leds INDEX=2

# CLEAR_TEMPERATURE_LED led=sb_leds index=3
# CLEAR_TEMPERATURE_LED led=sb_leds index=2
# CLEAR_TEMPERATURE_LED led=LCD index=2
# CLEAR_TEMPERATURE_LED led=LCD index=1
  


